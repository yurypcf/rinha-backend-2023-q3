version: "3.8"

services:

  db:
    image: postgres:latest
    hostname: db
    environment:
      - RUBY_YJIT_ENABLE=1
      - USE_POOL=1
      - WEB_CONCURRENCY=2
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    command:
      "postgres -c 'max_connections=500'"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "0.8GB"

  api01:
    build: .
    container_name: api01
    environment:
      - RUBY_YJIT_ENABLE=1
      - USE_POOL=1
      - WEB_CONCURRENCY=2
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    hostname: api01
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "1.0GB"

  api02:
    build: .
    container_name: api02
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    hostname: api02
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "1.0GB"

  nginx:
    image: nginx 
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 9999:9999
    depends_on:
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.2GB'

volumes:
  postgres_data: {}
